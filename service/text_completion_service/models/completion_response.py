# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from text_completion_service.models.base_model_ import Model
from text_completion_service import util


class CompletionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completions=None):  # noqa: E501
        """CompletionResponse - a model defined in OpenAPI

        :param completions: The completions of this CompletionResponse.  # noqa: E501
        :type completions: List[str]
        """
        self.openapi_types = {
            'completions': List[str]
        }

        self.attribute_map = {
            'completions': 'completions'
        }

        self._completions = completions

    @classmethod
    def from_dict(cls, dikt) -> 'CompletionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CompletionResponse of this CompletionResponse.  # noqa: E501
        :rtype: CompletionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completions(self):
        """Gets the completions of this CompletionResponse.


        :return: The completions of this CompletionResponse.
        :rtype: List[str]
        """
        return self._completions

    @completions.setter
    def completions(self, completions):
        """Sets the completions of this CompletionResponse.


        :param completions: The completions of this CompletionResponse.
        :type completions: List[str]
        """
        if completions is None:
            raise ValueError("Invalid value for `completions`, must not be `None`")  # noqa: E501

        self._completions = completions
