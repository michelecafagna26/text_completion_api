# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from text_completion_service.models.base_model_ import Model
from text_completion_service import util


class CompletionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prompt=None):  # noqa: E501
        """CompletionRequest - a model defined in OpenAPI

        :param prompt: The prompt of this CompletionRequest.  # noqa: E501
        :type prompt: str
        """
        self.openapi_types = {
            'prompt': str
        }

        self.attribute_map = {
            'prompt': 'prompt'
        }

        self._prompt = prompt

    @classmethod
    def from_dict(cls, dikt) -> 'CompletionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CompletionRequest of this CompletionRequest.  # noqa: E501
        :rtype: CompletionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prompt(self):
        """Gets the prompt of this CompletionRequest.


        :return: The prompt of this CompletionRequest.
        :rtype: str
        """
        return self._prompt

    @prompt.setter
    def prompt(self, prompt):
        """Sets the prompt of this CompletionRequest.


        :param prompt: The prompt of this CompletionRequest.
        :type prompt: str
        """
        if prompt is None:
            raise ValueError("Invalid value for `prompt`, must not be `None`")  # noqa: E501

        self._prompt = prompt
